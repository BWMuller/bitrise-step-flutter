#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  Flutter
summary: |
  Executes one or more Flutter commands. E.g. build, test or install.
description: |
  Sample `bitrise.yml` snippet for building iOS and Android apps:
  ```yaml
  primary:
  steps:
  - certificate-and-profile-installer:
      inputs:
      - install_defaults: 'no'
  - activate-ssh-key:
      run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
  - git-clone: {}
  - flutter:
      inputs:
      - commands: test|build ios|build apk
  ```

website: https://github.com/DroidsOnRoids/bitrise-step-flutter
source_code_url: https://github.com/bwmuller/bitrise-step-flutter
support_url: https://github.com/bwmuller/bitrise-step-flutter/issues
host_os_tags:
  - osx-10.10
  - ubuntu-16.04

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - build
  - test

is_requires_admin_user: false
is_always_run: false
is_skippable: false
run_if: ""

deps:
  brew:
  - name: git
  - name: curl
  - name: unzip
  apt_get:
  - name: git
  - name: curl
  - name: unzip
  - name: libglu1-mesa

toolkit:
  go:
    package_name: github.com/bwmuller/bitrise-step-flutter


inputs:
  - version: 0.9.4-beta
    opts:
      title: "Flutter version"
      summary: Flutter version including channel. Without `v` prefix. E.g. `0.2.8-alpha` or `0.3.0-dev`.
      is_expand: true
      is_required: true

  - working_dir: $BITRISE_SOURCE_DIR
    opts:
      title: "Root directory of Flutter project"
      summary: The root directory of your Flutter project, where your `pubspec.yaml` file is located.
      is_expand: true
      is_required: true

  - commands: build
    opts:
      title: "Flutter commands to be executed"
      summary: |
        `|` separated Flutter commands to be executed in order. E.g. `build`, `test` or `install`.
      is_expand: true
      is_required: true


#ANDROID EXPORT CONFIGS
  - apk_file_include_filter: "*.apk"
    opts:
      category: Android Export Config
      title: "APK file include filter"
      description: |
        The step will copy the generated apk files that match this filter into the Bitrise Deploy Directory.

        This filter is a standard find commands -path pattern, see: http://linux.die.net/man/1/find

        If you specify an empty filter, the step will set this filter to: `*.apk`.

        Example:

        Copy every apk:

        ```
        "*.apk"
        ```

        Copy every apk which filename contains `release`, like (`./app/build/outputs/apk/app-release-unsigned.apk`):

        ```
        *release*.apk
        ```
  - apk_file_exclude_filter: |
      *unaligned.apk
      *Test*.apk
    opts:
      category: Android Export Config
      title: "APK file exclude filter"
      description: |
        One filter per line. The step will **not** copy the generated apk files that match this filters into the Bitrise Deploy Directory.
        You can use this filter to avoid moving unalinged and/or unsigned apk files.

        This filter is a standard find commands negated -path flag, see: http://linux.die.net/man/1/find

        If you specify an empty filter, every apk file (selected by `apk_file_include_filter`) will be copied.

        Examples:

        Avoid to copy apk if filename contains `unaligned`:
        
        ```
        *unaligned*.apk
        ```

        Avoid to copy apk if filename contains `unaligned` and/or `Test`:
        
        ```
        *unaligned*.apk
        *Test*.apk
        ```
  - test_apk_file_include_filter: "*Test*.apk"
    opts:
      category: Android Export Config
      title: "Test APK file include filter"
      description: |
        The step will copy the generated apk files that match this filter into the Bitrise Deploy Directory.

        This filter is a standard find commands -path pattern, see: http://linux.die.net/man/1/find

        If you specify an empty filter, the step will set this filter to: `*.apk`.

        Example:

        Copy every apk which filename contains `Test`, like (`./app/build/outputs/apk/app-debug-androidTest-unaligned.apk`):
        
        ```
        *Test*.apk
        ```
  - test_apk_file_exclude_filter: ""
    opts:
      category: Android Export Config
      title: "Test APK file exclude filter"
      description: |
        One filter per line. The step will **not** copy the generated apk files that match this filters into the Bitrise Deploy Directory.
        You can use this filter to avoid moving unalinged and/or unsigned apk files.

        This filter is a standard find commands negated -path flag, see: http://linux.die.net/man/1/find

        If you specify an empty filter, every apk file (selected by `apk_file_include_filter`) will be copied.

        Example:

        Avoid to copy test apk if filename contains `unaligned`:

        ```
        *unaligned*.apk
        ```
  - mapping_file_include_filter: "*/mapping.txt"
    opts:
      category: Android Export Config
      title: "Mapping file include filter"
      description: |
        The step will copy the generated mapping files that match this filter into the Bitrise Deploy Directory.

        This filter is a standard find commands -path pattern, see: http://linux.die.net/man/1/find

        If you specify an empty filter, no mapping files will be copied.

        Example: 
        
        Copy every mapping.txt file:

        ```
        *mapping.txt
        ```
  - mapping_file_exclude_filter:
    opts:
      category: Android Export Config
      title: "Mapping file exclude filter"
      description: |
        The step will **not** copy the generated mapping files that match this filter into the Bitrise Deploy Directory.
        You can use this step to avoid moving beta mapping file.

        This filter is a standard find commands negated -path flag, see: http://linux.die.net/man/1/find

        If you specify an empty filter, every mapping files (selected by `mapping_file_include_filter`) will be copied.

        Example: 
        
        Avoid to copy mapping.txt file in a `beta` directoy:

        ```
        */beta/mapping.txt
        ``` 